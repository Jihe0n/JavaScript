<javascript> 

1. 웹브라우저를 프로그래밍적으로 제어하는 언어

2. node.js >> 탈웹브라우저
    자바스크립트가 웹서버 영역까지 확장하는 것 
    웹서버, 웹브라우저 모두를 자바스크립트로 통일할 수 있다

3. 엄격한 동등 연산자 "===" 좌항 우항의 값과 타입도 같아야 True가 나오는 엄격한 연산자
    그냥 무조건 ===를 쓰자 

4. prompt()
    파이썬의 input, C의 scanf과 같은 사용자에게 값을 입력 받는 함수

5. document.write("") 
    script안에서 html안에서 직접 코드를 입력하는 것처럼 웹페이지에 출력하게 하는 명령어 


6. 익명함수 
    (function(){document.write("익명함수");}) (); 
    익명함수 >> 이름이 필요없고 주로 일회성으로 함수 쓸때 많이씀
    자바스크립트는 함수 언어라고 할 정도록 함수가 중요함
  

7. php의 연관배열 > 배열의 인덱스를 문자로 사용하여 가독성을 높이는 것
    javascript 에서는 객체를 만듬 >> { }, object 


8. 객체의 object['a'] // object.a 는 같은 뜻 이지만
    object['a'+'b'] 등으로 활용할 수 있는 장점이 있어서 필요에 의해 쓰면 편리 

9. 배열을 내부적으로 순서를 가지고있음 (추가된 순서)
    하지만 객체는 key : value로 나누워졌지 순서를 가지지 않음

10. 객체 or 배열에서 for문 쓸때  >> 처럼 파이썬의 for문 같은 형태로 씀  
    for( key in obj){
    }

11. this의 의미
    속해있는 객체를 가리킴

12. <script src=""></script> 의 의미 
    >> script를 보면 일단 src를 확인하고 그 값을 읽어서 script안쪽에 넣는다의 의미


13. 변수 선언시 var은 명시적으로 local 변수를 생성함을 뜻함 // 함수밖에서 쓰면 전역변수로 선언됨 
    유효범위(scope) > 변수의 수명 

14. 자바스크립트의 유효범위의 대상 
    자바스크립트는 다른 언어와 다르게 함수에 대한 유효범위만을 제공함 무슨 뜻이냐하면 
    함수내부가 아닌 for문 if문 안에서 var로 변수선언을 해도 전역변수로 제공함
    따라서 함수의 내부에서 선언된 변수만이 지역변수로써의 의미를 가짐 

15. 자바스크립트는 정적 유효범위를 가짐 >> 함수가 선언된 시점에서 유효범위를 가짐

16. 객체의 속성으로 담겨진 함수를 메소드라고 부름

17. 자바스크립트의 함수는 값이다 >> 그렇기때문에 변수에 저장되며 객체의 속성으로도 사용될 수 있다.
    함수의 인자로도 전달 될 수있고 return값으로도 함수, 배열의 값으로도 함수가 사용가능하다.

18. 콜백함수 >> 순차적으로 실행하고 싶을때 사용하는 함수

18. 비동기 처리란 
    페이지 전체를 리로딩 하는게 아니라 필요한 부분만 웹서버 한테 요청한다 (그냥 막연히 알던 것)
    특정 로직의 실행이 끝날 때까지 대기하지 않고, 나머지 코드를 먼저 실행하는 것이 비동기 처리이다.
    요청을 보낸 후 응답에 관계 없이 다음 동작을 실행

19. 자바스크립트에서 비동기 처리가 필요한 이유
    화면에서 서버로 데이터를 요청했을 때 서버가 응답값을 언제 줄지도 모르는데 마냥 기다릴 순 없기 때문이다

비동기방식에서 어떤 주소로 데이터를 요청하고 리턴값을 받아와야 되는데
요청하고 응답값을 받아오기 전에 리턴이 되서 undefined가 받아와짐

이러한 비동기 처리의 방식을 해결하기 위해서 순서를 보장하기위해 콜백함수를 사용하는데
여러개의 콜백함수가 중첩되면 복잡해지기 때문에 promise 방식이나 최신 자바스크립트의 fetch, then등을 사용
하거나 혹은 리액트나 뷰에서는 axios라는 외부 라이브러리 사용  


20. 클로저(closure)
    내부함수가 외부함수의 맥락의 접근할 수 있을 뿐만 아니라 외부함수가 종료된 이후에도 
    내부함수를 통해 외부함수에 접근 할 수 있는 것 






. 생활코딩 자바스크립트 사전 https://opentutorials.org/course/50/37



 






















 

